AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template for EC2, RDS, ALB, and associated resources.

Resources:

  EC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Security group for EC2 instance'
      VpcId: 'vpc-0277fe13aac9a146d'
      SecurityGroupIngress:
        - IpProtocol: 'tcp'
          FromPort: 22
          ToPort: 22
          CidrIp: '0.0.0.0/0' # Adjust as necessary for your security
        - IpProtocol: 'tcp'
          FromPort: 443
          ToPort: 443
          CidrIp: '0.0.0.0/0' # Adjust as necessary for your security
        - IpProtocol: 'tcp'
          FromPort: 80
          ToPort: 80
          CidrIp: '0.0.0.0/0' # Adjust as necessary for your security

  RDSSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Security group for RDS instance'
      VpcId: 'vpc-0277fe13aac9a146d'
      SecurityGroupIngress:
        - IpProtocol: 'tcp'
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !Ref EC2SecurityGroup

  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      ImageId: ami-09a81b370b76de6a2 # Ubuntu Server 22.04 LTS AMI
      KeyName: ai-reversi
      SubnetId: subnet-00f244f854eae69f4
      SecurityGroupIds:
        - !Ref EC2SecurityGroup
      Tags:
        - Key: Name
          Value: ai-reversi

  RDSSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: ai-reversi-db-secret
      Description: "Secret for AI Reversi RDS database"
      GenerateSecretString:
        SecretStringTemplate: '{"username": "db_rds_admin"}'
        GenerateStringKey: "password"
        PasswordLength: 16
        ExcludeCharacters: "\"@/\\"

  RDSInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBInstanceClass: db.t3.micro
      AllocatedStorage: 10 # Adjust as needed
      Engine: postgres
      EngineVersion: '15.4' # Update to the version you want to use
      DBInstanceIdentifier: ai-reversi-postgre
      MasterUsername: db_rds_admin
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${RDSSecret}:SecretString:password}}'
      DBSubnetGroupName: rds-ec2-db-subnet-group-1
      VPCSecurityGroups:
        - !Ref RDSSecurityGroup
      Tags:
        - Key: Name
          Value: ai-reversi-postgre

  ElasticIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc

  ElasticIPAssociation:
    Type: 'AWS::EC2::EIPAssociation'
    Properties:
      InstanceId: !Ref EC2Instance
      AllocationId: !GetAtt ElasticIP.AllocationId

  LoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: ai-reversi
      Subnets:
        - subnet-00f244f854eae69f4
        - subnet-03b0b39b4ed6f0b3f
      SecurityGroups:
        - !Ref EC2SecurityGroup
      Scheme: internet-facing
      Type: application
      IpAddressType: ipv4

  LoadBalancerListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: "arn:aws:acm:ap-northeast-1:099119496071:certificate/dec32abb-d8aa-40ef-b314-f7434304c1d0"

  TargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Port: 80
      Protocol: HTTP
      VpcId: vpc-0277fe13aac9a146d
      TargetType: instance

  DNSRecord:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      HostedZoneId: "Z032605334SKM0XBBMJC0"
      Name: "ai-reversi.com"
      Type: A
      AliasTarget:
        DNSName: !GetAtt LoadBalancer.DNSName
        HostedZoneId: !GetAtt LoadBalancer.CanonicalHostedZoneID
        
Outputs:
  RDSSecretARN:
    Description: "Secret ARN for RDS instance"
    Value: !Ref RDSSecret
